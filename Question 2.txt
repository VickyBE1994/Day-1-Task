OBJECTS  And Its INTERNAL REPRESENTATION In JavaScript
      Objects in javaccripts is its most important data types and forms the building blocks for modern javascripts
     these objects are quit differnts from javascripts primitive datatypes(number,string,boolean,null,undefined and symbol)
     in the sense that while these primitive datatypesall stored a single value each(depending of their types)
      objects are more complexand esch object may contain any conbination of these primitive data types as well as the referance datatypes
           
           loosely speaking objects in javascripts maybe define as an unordered collection of related data,of primitive or referance types in
            the "form of the key value"pairs .these keys can be variables or function and or calledproperties and methods,respectively in the
            contest of an object
            for examble.If your objects is a student .it well have propertieslike name,age,address,id,etc and methods like

            OBJECTS AND PROPERTIES
               A javascripts objectshas properties associated withit.A property of an object can be explained as a variables
               that is attached to the object.Object properties are basically the same as ordinary javascript variables,expected
               for the attachment to objects.You access the properties of an object define the characteristics
               of the object.You access the properties of an object with a simble dot-notation

                                     object name .propertyName
             like all javascript variables,both the object name (which could be a normal variable) and 
             property name mycar and give its property namedmake,model,and year as follows
                                    var my car=new object();
                                    mycar.make='Ford';
                                    mycar.model='mustang';
                                    mycar.year=1969;
            unassigned properties of an objects are undefined(and not null).
                                    mycar.color;//undefined
            properties of javaccript objects can also be accessed or set using a bracket notation.objects are sometimes called associative 
            arrays since each property is associated with a string value that can be access the properties of the mycar object as follows
                                    mycar['make']='ford';
                                    mycar['model']='mustang'
                                    mycar['year']=1969
            An object property name can be any valid javascript string,or anything that can be converted to string including the empty string                       
However any property name that is nt valid javascript identifier.can only be using accessed using the square bracket notation .This notation 
is also very usefull when property names are to be dynamically determined
                                    //four vaiables are created and assigned in a single go,
                                    //separated by commas
                                    var myobj=new object(),
                                          str='mystring',
                                          rand=Math.random(),
                                          obj=new object();
                              myobj.type           ='dot syntax';
                              myobj['date created']= 'string with space';
                              myobj[str]           ='string value';
                              myobj[rand]          ='random number';
                              myobj[obj]           ='object';
                              myobj['']            ='Even an empty string';
                              console.log(myobj);
             You can also access properties by using a string value that is stored in a variable
                               var propertyName    ='make';
                               mycar [propertyName]='ford';
                               propertyName        ='model';
                               mycar[propertyName] ='mustang';
            You can use the bracket notation with for...in to iterate oveall the enumarable properties of an object
            to illustrate how this works,the following functions displsys the properties ofthe object when you pass the object
            and the object name as argurments to the function
                              functions showprops(obj,objName)
                              {var result='';
                              for (var i in obj)
                              {//obj.hasOwnProperty()
                              is used to filter out properties from the objects prototype chain
                               if 
                              (obj.hasownproperty(i))
                              {result +${objectName}.${i}=${obj[i]}=/n;}
                              
                              }return result;}
            So the functions call shoeprops(mycar,"mycar")would return the following 
                              mycar.make=Ford
                              mycar.model=mustang
                              mycar.year=1969
             CREATE JAVASCRIPT OBJECT WITH CONSTRUCTOR
                  Constructor is nothing but a function and with help of a new keyword,constructor function allow to create a
       multiple object of same flaver as shown below
                              function Vehicle(name,maker)
                              {this.name=name;
                              this.maker=maker;
                              }
                              let car 1=new vehicle ('fiesta','ford');
                              let car2=new vehicle('santafe','Hyndai');
                              console.log(car1.name);
                              //output:fiesta
                              console.log(car2.name);
                              //output:Santa fe 
      Using the javaccript keyword new 
            The following also createa a new Javascript object with four properties

         Example
                Var person=new object
                person.firstname="John"
                person.lastname="Doe"
                person.age=50
                person.eyecolor="blue"
      USING THE OBJECT CREATE 
                //Animal properties and method encapsulation
                Var animal=
                {type:"Invertebrates,
                //Default value of properties
                Display type:function()
                {//Method which will display type of animal
                console.log(this.type;)}}
                //create new animal type called animal 1
                var animal1=object.create(animal);
                animal displaytype();
                //output:invertebtates
                //create new animal type called fishes
                var fish=object.create(animal);
                fish.type='fishes';
                fish.displaytype();
                //output:Fishes
      

                



                              

                              
                                   

